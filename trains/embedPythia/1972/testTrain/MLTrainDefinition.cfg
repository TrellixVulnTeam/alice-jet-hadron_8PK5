#_______________________________________________________________________________
#Module.Begin        CDBConnectTask
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGPP/PilotTrain/AddTaskCDBconnect.C
#Module.MacroArgs
#Module.Deps
#Module.Owner        mfasel
#Module.OutputFile   EventStat_temp.root
#Module.StartConfig
__R_ADDTASK__->SetFallBackToRaw(kTRUE);
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        MultSelectionTask
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/OADB/COMMON/MULTIPLICITY/macros/AddTaskMultSelection.C
#Module.MacroArgs    kFALSE
#Module.Deps         CDBConnectTask
#Module.Owner        jmazer
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);

/* Actually the multiplicity task does need to run on AODs as well
if (strcmp(kDatatype,"AOD")==0) { // AOD data sets don't need centrality task
  cout << "*** Removing centrality task because AOD dataset" << endl;
  AliAnalysisManager *mgr = AliAnalysisManager::GetAnalysisManager();
  TObjArray *array = mgr->GetTasks();
  array->Remove(__R_ADDTASK__);
}
*/
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        JetFinder_full_AKT_02_3GeVConstituent_truthJets_EmbeddingTest
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGJE/EMCALJetTasks/macros/AddTaskEmcalJet.C
#Module.MacroArgs    "mcparticles", "", AliJetContainer::antikt_algorithm, 0.2, AliJetContainer::kFullJet, 3.0, 3.0, kGhostArea, AliJetContainer::pt_scheme, "truthJets", 0., kFALSE, kFALSE
#Module.Deps         EmbeddingFromPYTHIA_Test
#Module.Owner        rehlersi
#Module.OutputFile   EventStat_temp.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetForceBeamType(AliAnalysisTaskEmcal::kAA);

// Setup the tracks properly to be retrieved from the external event
AliMCParticleContainer * truthTracks = __R_ADDTASK__->GetMCParticleContainer(0);
truthTracks->SetIsEmbedding(kTRUE);
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmcalCorrectionTask_EmbeddingTest_data
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWG/EMCAL/macros/AddTaskEmcalCorrectionTask.C
#Module.MacroArgs    "data"
#Module.Deps         EmbeddingFromPYTHIA_Test
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetUserConfigurationFilename("alien:///alice/cern.ch/user/r/rehlersi/embedding/userConfiguration.yaml");

//__R_ADDTASK__->SetUseNewCentralityEstimation(kTRUE);
__R_ADDTASK__->SetNCentBins(5);
__R_ADDTASK__->SetForceBeamType(AliEmcalCorrectionTask::kAA);

__R_ADDTASK__->Initialize();

#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmcalCorrectionTask_EmbeddingTest_embed
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWG/EMCAL/macros/AddTaskEmcalCorrectionTask.C
#Module.MacroArgs    "embed"
#Module.Deps         EmbeddingFromPYTHIA_Test
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetUserConfigurationFilename("alien:///alice/cern.ch/user/r/rehlersi/embedding/userConfiguration.yaml");

//__R_ADDTASK__->SetUseNewCentralityEstimation(kTRUE);
__R_ADDTASK__->SetNCentBins(5);
__R_ADDTASK__->SetForceBeamType(AliEmcalCorrectionTask::kAA);

__R_ADDTASK__->Initialize();

#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmcalCorrectionTask_EmbeddingTest_combined
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWG/EMCAL/macros/AddTaskEmcalCorrectionTask.C
#Module.MacroArgs    "combined"
#Module.Deps         EmbeddingFromPYTHIA_Test
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetUserConfigurationFilename("alien:///alice/cern.ch/user/r/rehlersi/embedding/userConfiguration.yaml");

//__R_ADDTASK__->SetUseNewCentralityEstimation(kTRUE);
__R_ADDTASK__->SetNCentBins(5);
__R_ADDTASK__->SetForceBeamType(AliEmcalCorrectionTask::kAA);

__R_ADDTASK__->Initialize();

#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmbeddingFromPYTHIA_Test
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWG/EMCAL/macros/AddTaskEmcalEmbeddingHelper.C
#Module.MacroArgs
#Module.Deps         CDBConnectTask,MultSelectionTask
#Module.Owner        lcunquei
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SetPtHardBin(kPtHardBin);
__R_ADDTASK__->SetNPtHardBins(11);
__R_ADDTASK__->SetAnchorRun(169838);
//__R_ADDTASK__->SetFilePattern("alien:///alice/sim/2012/LHC12a15e_fix/%d/%d/AOD149/");
__R_ADDTASK__->SetFileListFilename("../../../aodFilesEmbed.txt");
__R_ADDTASK__->SetTriggerMask(AliVEvent::kAny); // Equivalent to 0
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetRandomFileAccess(kTRUE);

__R_ADDTASK__->Initialize();
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        JetFinder_full_AKT_02_3GeVConstituent_hybridJets_EmbeddingTest
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGJE/EMCALJetTasks/macros/AddTaskEmcalJet.C
#Module.MacroArgs    "usedefault", "caloClustersCombined", AliJetContainer::antikt_algorithm, 0.2, AliJetContainer::kFullJet, 3.0, 3.0, kGhostArea, AliJetContainer::pt_scheme, "hybridJets", 0., kFALSE, kFALSE
#Module.Deps         EmcalCorrectionTask_EmbeddingTest_combined,EmcalCorrectionTask_EmbeddingTest_data,EmcalCorrectionTask_EmbeddingTest_embed
#Module.Owner        rehlersi
#Module.OutputFile   EventStat_temp.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetForceBeamType(AliAnalysisTaskEmcal::kAA);

// Particle containers
AliTrackContainer * tracksDetLevel = new AliTrackContainer("tracks");
// Get the det level tracks from the external event!
tracksDetLevel->SetIsEmbedding(kTRUE);
tracksDetLevel->SetParticlePtCut(3.);
__R_ADDTASK__->AdoptTrackContainer(tracksDetLevel);

// Cluster containers
__R_ADDTASK__->GetClusterContainer(0)->SetDefaultClusterEnergy(AliVCluster::kHadCorr);
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmcalJetSampleTask_truthJets_EmbeddingTest
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGJE/EMCALJetTasks/macros/AddTaskEmcalJetSample.C
#Module.MacroArgs    "mcparticles", "", "", "truth"
#Module.Deps         JetFinder_full_AKT_02_3GeVConstituent_truthJets_EmbeddingTest
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetHistoBins(600, 0, 300);

// Particle containers
AliMCParticleContainer * partCont = __R_ADDTASK__->GetParticleContainer(0);
partCont->SetIsEmbedding(kTRUE);
partCont->SetParticlePtCut(0.15);

// Jets
__R_ADDTASK__->AddJetContainer("truthJets_AKTFullR020_mcparticles_pT3000_pt_scheme", AliEmcalJet::kEMCALfid, 0.2);
//__R_ADDTASK__->AddJetContainer(AliJetContainer::kFullJet, AliJetContainer::antikt_algorithm, AliJetContainer::pt_scheme, 0.2, AliEmcalJet::kEMCALfid, "hybridJets");
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        EmcalJetSampleTask_hybridJets_EmbeddingTest
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGJE/EMCALJetTasks/macros/AddTaskEmcalJetSample.C
#Module.MacroArgs    "usedefault", "caloClustersCombined", "emcalCellsCombined", "hybrid"
#Module.Deps         JetFinder_full_AKT_02_3GeVConstituent_hybridJets_EmbeddingTest
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
__R_ADDTASK__->SetHistoBins(600, 0, 300);

// Particle containers
__R_ADDTASK__->GetParticleContainer(0)->SetParticlePtCut(0.15);
// Embedded tracks
AliTrackContainer * tracksDetLevel = new AliTrackContainer("tracks");
tracksDetLevel->SetIsEmbedding(kTRUE);
tracksDetLevel->SetParticlePtCut(0.15);
__R_ADDTASK__->AdoptTrackContainer(tracksDetLevel);

// Cluster containers
__R_ADDTASK__->GetClusterContainer(0)->SetClusECut(0.);
__R_ADDTASK__->GetClusterContainer(0)->SetClusPtCut(0.);
__R_ADDTASK__->GetClusterContainer(0)->SetClusNonLinCorrEnergyCut(0.);
__R_ADDTASK__->GetClusterContainer(0)->SetClusHadCorrEnergyCut(0.30);
__R_ADDTASK__->GetClusterContainer(0)->SetDefaultClusterEnergy(AliVCluster::kHadCorr);
__R_ADDTASK__->SetHistoBins(600, 0, 300);

// Jets
__R_ADDTASK__->AddJetContainer("hybridJets_AKTFullR020_tracks_pT3000_caloClustersCombined_E3000_pt_scheme", AliEmcalJet::kEMCALfid, 0.2);
//__R_ADDTASK__->AddJetContainer(AliJetContainer::kFullJet, AliJetContainer::antikt_algorithm, AliJetContainer::pt_scheme, 0.2, AliEmcalJet::kEMCALfid, "hybridJets");
#Module.EndConfig

#_______________________________________________________________________________
#Module.Begin        JetResponseMaker_embeddingTest
#Module.Libs
#Module.DataTypes    ESD, AOD, MC
#Module.MacroName    $ALICE_PHYSICS/PWGJE/EMCALJetTasks/macros/AddTaskJetResponseMaker.C
#Module.MacroArgs    "tracks", "caloClustersCombined", "hybridJets_AKTFullR020_tracks_pT3000_caloClustersCombined_E3000_pt_scheme", "", 0.2, "mcparticles", "", "truthJets_AKTFullR020_mcparticles_pT3000_pt_scheme", "", 0.2, 0., 0., 0., 1, AliJetResponseMaker::kGeometrical, 1.2, 1.2, "EMCALfid", -999, -999, -999
#Module.Deps         JetFinder_full_AKT_02_3GeVConstituent_truthJets_EmbeddingTest,JetFinder_full_AKT_02_3GeVConstituent_hybridJets_EmbeddingTest
#Module.Owner        rehlersi
#Module.OutputFile   AnalysisResults.root
#Module.StartConfig
/////////////
// Note: Using kPtHardBin will need an update to AliAnalysisTaskEmcal on how it extracts the pt hard bin value!
/////////////
__R_ADDTASK__->SelectCollisionCandidates(kComPhysSel);
// Configure
__R_ADDTASK__->SetHistoType(1); // ThNSparse
__R_ADDTASK__->SetJetRelativeEPAngleAxis(kTRUE);
// Jets
// This will crash otherwise, as it will attempt to access this particle containers (although it will not use it for anything)
__R_ADDTASK__->GetJetContainer(1)->GetParticleContainer()->SetIsEmbedding(kTRUE);
//
__R_ADDTASK__->SetIsPythia(kFALSE);
#Module.EndConfig

